‚úÖ –û–ø—Ç–∏–º–∞–ª—å–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ ‚Äì –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–ª–æ–≤–∞—Ä—å —Å–æ—Å—Ç–æ—è–Ω–∏–π –∫–Ω–æ–ø–æ–∫!
–ú–æ–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å —Å–ª–æ–≤–∞—Ä—å (dict), –≥–¥–µ:

–ö–ª—é—á ‚Äì —ç—Ç–æ –Ω–∞–∑–≤–∞–Ω–∏–µ —ç—Ç–∞–ø–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, "vertical_cut").
–ó–Ω–∞—á–µ–Ω–∏–µ ‚Äì —Å–ø–∏—Å–æ–∫ –∫–Ω–æ–ø–æ–∫, –∫–æ—Ç–æ—Ä—ã–µ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–º–∏ –Ω–∞ —ç—Ç–æ–º —ç—Ç–∞–ø–µ.
üî• –ö–∞–∫ —ç—Ç–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å?
1Ô∏è‚É£ –°–æ–∑–¥–∞—ë–º —Å–ª–æ–≤–∞—Ä—å —Å–æ—Å—Ç–æ—è–Ω–∏–π –∫–Ω–æ–ø–æ–∫

class CropperUI:
    def __init__(self):
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–∞–∫–∏–µ –∫–Ω–æ–ø–∫–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∞–∫—Ç–∏–≤–Ω—ã –Ω–∞ –∫–∞–∂–¥–æ–º —ç—Ç–∞–ø–µ
        self.stage_buttons = {
            "start": ["open_image", "next"],
            "vertical_cut": ["add_cut_line", "confirm_cut", "back"],
            "crop": ["set_crop_area", "confirm_crop", "back"],
            "finalize": ["save", "back"]
        }

        # –í—Å–µ –∫–Ω–æ–ø–∫–∏ (–æ–Ω–∏ –µ—Å—Ç—å, –Ω–æ –º–æ–≥—É—Ç –±—ã—Ç—å —Å–∫—Ä—ã—Ç—ã)
        self.buttons = {
            "open_image": Button("–û—Ç–∫—Ä—ã—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ"),
            "next": Button("–î–∞–ª–µ–µ"),
            "add_cut_line": Button("–î–æ–±–∞–≤–∏—Ç—å –ª–∏–Ω–∏—é —Ä–∞–∑—Ä–µ–∑–∞"),
            "confirm_cut": Button("–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å —Ä–∞–∑—Ä–µ–∑"),
            "set_crop_area": Button("–í—ã–±—Ä–∞—Ç—å –æ–±–ª–∞—Å—Ç—å –æ–±—Ä–µ–∑–∫–∏"),
            "confirm_crop": Button("–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –æ–±—Ä–µ–∑–∫—É"),
            "save": Button("–°–æ—Ö—Ä–∞–Ω–∏—Ç—å"),
            "back": Button("–ù–∞–∑–∞–¥")
        }

    def set_stage(self, stage_name):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç –≤–∏–¥–∏–º—ã–µ –∫–Ω–æ–ø–∫–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —ç—Ç–∞–ø–∞."""
        for name, button in self.buttons.items():
            if name in self.stage_buttons.get(stage_name, []):
                button.show()  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É
            else:
                button.hide()  # –°–∫—Ä—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É
2Ô∏è‚É£ –ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç?
–ü—Ä–∏ —Å—Ç–∞—Ä—Ç–µ ‚Üí –∞–∫—Ç–∏–≤–Ω—ã "open_image" –∏ "next".
–ù–∞ —ç—Ç–∞–ø–µ –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ–≥–æ —Ä–∞–∑—Ä–µ–∑–∞ ‚Üí –∞–∫—Ç–∏–≤–Ω—ã "add_cut_line", "confirm_cut" –∏ "back".
–ü—Ä–∏ —Å–º–µ–Ω–µ —ç—Ç–∞–ø–∞ ‚Üí –≤—ã–∑—ã–≤–∞–µ–º set_stage("vertical_cut"), –∏ –Ω—É–∂–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ –ø–æ—è–≤–ª—è—é—Ç—Å—è, –∞ –Ω–µ–Ω—É–∂–Ω—ã–µ —Å–∫—Ä—ã–≤–∞—é—Ç—Å—è.
üöÄ –ü–ª—é—Å—ã —Ç–∞–∫–æ–≥–æ –ø–æ–¥—Ö–æ–¥–∞
‚úî –ì–∏–±–∫–æ—Å—Ç—å ‚Äì –ª–µ–≥–∫–æ –¥–æ–±–∞–≤–ª—è—Ç—å –Ω–æ–≤—ã–µ —ç—Ç–∞–ø—ã –∏ –∫–Ω–æ–ø–∫–∏.
‚úî –õ–æ–≥–∏—á–Ω–æ—Å—Ç—å ‚Äì —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º –∏–¥—ë—Ç —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ —á–µ—Ä–µ–∑ set_stage().
‚úî –ß–∏—Å—Ç—ã–π –∫–æ–¥ ‚Äì –Ω–µ –Ω—É–∂–Ω–æ –≤—Ä—É—á–Ω—É—é —Å–∫—Ä—ã–≤–∞—Ç—å/–ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –∫–Ω–æ–ø–∫–∏ –≤ —Ä–∞–∑–Ω—ã—Ö –º–µ—Å—Ç–∞—Ö –∫–æ–¥–∞.

üî• –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ —É–ª—É—á—à–µ–Ω–∏–µ
–ï—Å–ª–∏ —ç—Ç–∞–ø–æ–≤ –æ—á–µ–Ω—å –º–Ω–æ–≥–æ, –º–æ–∂–Ω–æ —Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞–±–æ—Ä—ã –∫–Ω–æ–ø–æ–∫ –≤ JSON –∏–ª–∏ –∫–æ–Ω—Ñ–∏–≥-—Ñ–∞–π–ª–µ –∏ –∑–∞–≥—Ä—É–∂–∞—Ç—å –∏—Ö –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏.

–ö–∞–∫ —Ç–µ–±–µ —Ç–∞–∫–æ–π –≤–∞—Ä–∏–∞–Ω—Ç? üòÉ

1. –û–¥–∏–Ω JSON-—Ñ–∞–π–ª (–µ—Å–ª–∏ –¥–∞–Ω–Ω—ã—Ö –Ω–µ —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ)
–ï—Å–ª–∏ –Ω—É–∂–Ω–æ —Ö—Ä–∞–Ω–∏—Ç—å –∫–Ω–æ–ø–∫–∏, –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –∏ –¥—Ä—É–≥–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤–º–µ—Å—Ç–µ, –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –æ–¥–∏–Ω –∫–æ–Ω—Ñ–∏–≥-—Ñ–∞–π–ª —Å –ª–æ–≥–∏—á–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π.

üìå –ü—Ä–∏–º–µ—Ä config.json:
json
–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å
–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
{
    "ui": {
        "window_size": [800, 600],
        "theme": "dark"
    },
    "buttons": {
        "start": ["open_image", "next"],
        "vertical_cut": ["add_cut_line", "confirm_cut", "back"],
        "crop": ["set_crop_area", "confirm_crop", "back"],
        "finalize": ["save", "back"]
    },
    "image_processing": {
        "default_crop_margin": 10,
        "max_cut_lines": 5
    }
}
üî• –ö–∞–∫ –∑–∞–≥—Ä—É–∂–∞—Ç—å –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤ Python

import json

# –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥
with open("config.json", "r", encoding="utf-8") as file:
    config = json.load(file)

# –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ
window_size = config["ui"]["window_size"]
theme = config["ui"]["theme"]
buttons_for_stage = config["buttons"].get("vertical_cut", [])
max_cut_lines = config["image_processing"]["max_cut_lines"]
‚úÖ –ü–ª—é—Å—ã:
‚úî –í—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ –æ–¥–Ω–æ–º –º–µ—Å—Ç–µ ‚Üí –ª–µ–≥–∫–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å.
‚úî –ú–µ–Ω—å—à–µ —Ñ–∞–π–ª–æ–≤ ‚Üí —É–¥–æ–±–Ω–µ–µ —Ö—Ä–∞–Ω–∏—Ç—å.
‚úî –ë—ã—Å—Ç—Ä–µ–µ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è (–Ω–µ –Ω—É–∂–Ω–æ —á–∏—Ç–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ñ–∞–π–ª–æ–≤).

‚ùå –ú–∏–Ω—É—Å—ã:
‚úñ –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã—Ö –æ—á–µ–Ω—å –º–Ω–æ–≥–æ, JSON –º–æ–∂–µ—Ç —Å—Ç–∞—Ç—å —Å–ª–æ–∂–Ω—ã–º –∏ –Ω–µ—É–¥–æ–±–Ω—ã–º.
‚úñ –ï—Å–ª–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Ä–∞–∑–¥–µ–ª–µ–Ω–∞ –ø–æ —Ä–∞–∑–Ω—ã–º –º–æ–¥—É–ª—è–º (UI, –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π), –ª–æ–≥–∏—á–Ω–µ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ä–∞–∑–¥–µ–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã.